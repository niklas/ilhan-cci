#!/usr/bin/env ruby

require 'rubygems'
require 'bundler/setup'

require 'optparse'
require 'pp'
require 'pry'


$:.unshift File.expand_path('../../lib', __FILE__)
require 'cache'
require 'crunch'
require 'utils'

options = {}
OptionParser.new do |opts|
  opts.banner = "Usage: #{$1} [options]"

  opts.on("-v", "--[no-]verbose", "Run verbosely") do |v|
    options[:verbose] = v
  end

  opts.on('-t', '--tinker', 'Tinker mode, overwrite generated images, do not use magic names') do |v|
    options[:tinker] = v
  end

  opts.on("--width N", Integer, "Width of output image") do |v|
    options[:width] = v
  end
  opts.on("--height N", Integer, "Height of output image") do |v|
    options[:height] = v
  end

  opts.on('--resolution N', Integer, "Resolution in seconds (default 3600) [not all values supported]") do |v|
    options[:resolution] = v
  end
  opts.on('--only N', Float, "Only use the most N recent values") do |v|
    options[:only] = v
  end
  opts.on('--period N', Integer, "Number of values to calculate averages") do |v|
    options[:period] = v
  end
  opts.on('--factor N', Float, "Lambert constant, defaults to 0.015") do |v|
    options[:factor] = v
  end
end.parse!


if $0 == __FILE__
  c = Crunch.new(options)

  filefp = if options[:tinker]
             ''
           else
             '-' + [
               options[:period],
               options[:factor],
               options[:resolution],
               options[:only],
             ].reject(&:nil?).join('-')
           end

  c.calculate_cci(options)

  Utils.plot(c, :t, options.merge(
    label: 'hlc3',
    output: "prices#{filefp}.png",
    title: 'Preis',
  ))
  Utils.plot(c, :cci, options.merge(
    label: 'cci',
    output: "cci#{filefp}.png",
    title: 'Commodity Channel Index',
  ))
end
